{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nexport const useSocketManager = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:3001\", {\n      // Puedes añadir configuraciones adicionales aquí, si es necesario\n    });\n    setSocket(newSocket);\n    const handleConnect = userId => {\n      console.log(`User connected: ${userId}`);\n\n      // Agregar el nuevo usuario a la lista de personajes\n      setCharacters(prevCharacters => [...prevCharacters, {\n        id: userId,\n        position: [Math.random() * 3, 0, Math.random() * 3],\n        color: \"#\" + ((userId + 1) * 16777215).toString(16)\n      }]);\n    };\n    const handleDisconnect = userId => {\n      console.log(`User disconnected: ${userId}`);\n\n      // Eliminar al usuario desconectado de la lista de personajes\n      setCharacters(prevCharacters => prevCharacters.filter(character => character.id !== userId));\n    };\n    const handleCharacters = updatedCharacters => {\n      setCharacters(updatedCharacters);\n    };\n    newSocket.on(\"connect\", () => {\n      handleConnect(newSocket.id);\n    });\n    newSocket.on(\"disconnect\", () => {\n      handleDisconnect(newSocket.id);\n    });\n    newSocket.on(\"characters\", handleCharacters);\n    return () => {\n      newSocket.off(\"connect\", handleConnect);\n      newSocket.off(\"disconnect\", handleDisconnect);\n      newSocket.off(\"characters\", handleCharacters);\n      newSocket.disconnect();\n    };\n  }, []);\n  return {\n    socket,\n    characters,\n    setCharacters\n  };\n};\n_s(useSocketManager, \"08/wRBYAcXLDw3NJ6xctZzwxFIc=\");","map":{"version":3,"names":["useEffect","useState","io","useSocketManager","_s","characters","setCharacters","socket","setSocket","newSocket","handleConnect","userId","console","log","prevCharacters","id","position","Math","random","color","toString","handleDisconnect","filter","character","handleCharacters","updatedCharacters","on","off","disconnect"],"sources":["/home/valentinalopez/Development/udeverso-react/client/src/components/SocketManager.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\nexport const useSocketManager = () => {\n  const [characters, setCharacters] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:3001\", {\n      // Puedes añadir configuraciones adicionales aquí, si es necesario\n    });\n\n    setSocket(newSocket);\n\n    const handleConnect = (userId) => {\n      console.log(`User connected: ${userId}`);\n\n      // Agregar el nuevo usuario a la lista de personajes\n      setCharacters((prevCharacters) => [\n        ...prevCharacters,\n        {\n          id: userId,\n          position: [Math.random() * 3, 0, Math.random() * 3],\n          color: \"#\" + ((userId + 1) * 16777215).toString(16),\n        },\n      ]);\n    };\n\n    const handleDisconnect = (userId) => {\n      console.log(`User disconnected: ${userId}`);\n\n      // Eliminar al usuario desconectado de la lista de personajes\n      setCharacters((prevCharacters) =>\n        prevCharacters.filter((character) => character.id !== userId)\n      );\n    };\n\n    const handleCharacters = (updatedCharacters) => {\n      setCharacters(updatedCharacters);\n    };\n\n    newSocket.on(\"connect\", () => {\n      handleConnect(newSocket.id);\n    });\n\n    newSocket.on(\"disconnect\", () => {\n      handleDisconnect(newSocket.id);\n    });\n\n    newSocket.on(\"characters\", handleCharacters);\n\n    return () => {\n      newSocket.off(\"connect\", handleConnect);\n      newSocket.off(\"disconnect\", handleDisconnect);\n      newSocket.off(\"characters\", handleCharacters);\n      newSocket.disconnect();\n    };\n  }, []);\n\n  return { socket, characters, setCharacters };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,kBAAkB;AAErC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAGP,EAAE,CAAC,uBAAuB,EAAE;MAC5C;IAAA,CACD,CAAC;IAEFM,SAAS,CAACC,SAAS,CAAC;IAEpB,MAAMC,aAAa,GAAIC,MAAM,IAAK;MAChCC,OAAO,CAACC,GAAG,CAAE,mBAAkBF,MAAO,EAAC,CAAC;;MAExC;MACAL,aAAa,CAAEQ,cAAc,IAAK,CAChC,GAAGA,cAAc,EACjB;QACEC,EAAE,EAAEJ,MAAM;QACVK,QAAQ,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAED,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACnDC,KAAK,EAAE,GAAG,GAAG,CAAC,CAACR,MAAM,GAAG,CAAC,IAAI,QAAQ,EAAES,QAAQ,CAAC,EAAE;MACpD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAMC,gBAAgB,GAAIV,MAAM,IAAK;MACnCC,OAAO,CAACC,GAAG,CAAE,sBAAqBF,MAAO,EAAC,CAAC;;MAE3C;MACAL,aAAa,CAAEQ,cAAc,IAC3BA,cAAc,CAACQ,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACR,EAAE,KAAKJ,MAAM,CAC9D,CAAC;IACH,CAAC;IAED,MAAMa,gBAAgB,GAAIC,iBAAiB,IAAK;MAC9CnB,aAAa,CAACmB,iBAAiB,CAAC;IAClC,CAAC;IAEDhB,SAAS,CAACiB,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BhB,aAAa,CAACD,SAAS,CAACM,EAAE,CAAC;IAC7B,CAAC,CAAC;IAEFN,SAAS,CAACiB,EAAE,CAAC,YAAY,EAAE,MAAM;MAC/BL,gBAAgB,CAACZ,SAAS,CAACM,EAAE,CAAC;IAChC,CAAC,CAAC;IAEFN,SAAS,CAACiB,EAAE,CAAC,YAAY,EAAEF,gBAAgB,CAAC;IAE5C,OAAO,MAAM;MACXf,SAAS,CAACkB,GAAG,CAAC,SAAS,EAAEjB,aAAa,CAAC;MACvCD,SAAS,CAACkB,GAAG,CAAC,YAAY,EAAEN,gBAAgB,CAAC;MAC7CZ,SAAS,CAACkB,GAAG,CAAC,YAAY,EAAEH,gBAAgB,CAAC;MAC7Cf,SAAS,CAACmB,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAErB,MAAM;IAAEF,UAAU;IAAEC;EAAc,CAAC;AAC9C,CAAC;AAACF,EAAA,CAzDWD,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}